#!/bin/bash

## CREATE A LOGO
## -------------

# Create a figlet logo from the given text using the pagga figlet font

## CREDITS
# ASCII art using the figlet CLI from AUR (https://aur.archlinux.org/packages/figlet) and the pagga font from the figlet-fonts-extra package from AUR (https://aur.archlinux.org/packages/figlet-fonts-extra_)

## DEPENDENCIES
# - figlet
# - figlet-fonts, figlet-fonts-extra

## PREFLIGHT
# Unalias everything to prevent weirdness
unalias -a
# Fail and exit when the first error occurs
set -e
# Enable globs
shopt -s nullglob
# For debbuging
#set -xv

## PRINTING MESSAGES
# Print text
function print {
	echo -e "$*"
}
# Print title text
function print_title {
	echo -e "\e[1;32m$*\e[0m"
}
# Print bold text
function print_bold {
	echo -e "\e[1;33m$*\e[0m"
}
# Print success text
function print_success {
	echo -e "\e[1;32m==>\e[0m \e[1m$*\e[0m"
}
# Print progress/info text
function print_info {
	echo -e "\e[1;34m==>\e[0m \e[1m$*\e[0m"
}
# Print starting a stage/process
function print_stage {
	echo -e "\e[1;35m==> $*\e[0m"
}
# Print warning text
function print_warning {
	echo -e "\e[0;33mWARN $*\e[0m"
}
# Print error text
function print_error {
	echo -e "\e[1;31mERR $*\e[0m"
}

## UTILITY
# Join elements of an array (taken from SO - https://stackoverflow.com/a/17841619; thank you to the answerer)
function join_by {
	local d=${1-} f=${2-}
	if shift 2; then
		printf %s "$f" "${@/#/$d}"
	fi
}
# Ask for confirmation
function ask_confirmation {
	# Ask a yes/no question
	read -p $'\e[1;33m ==> '$"$1"$'\e[0m [\e[1;32my\e[0m/\e[1;31mN\e[0m] ' -r
	# Return 0 if yes and 127 if no
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		return 0
	else
		return 127
	fi
}

## OPERATIONS
# Print help
function print_help {
	print_title "USAGE: $0 [options] <logo text>"
	print_bold ""
	print_bold "Options:"
	print "	-h                              Print help"
}
# Print out the logo
function create_logo {
	# Add some padding
	length=$((`echo $(figlet -f pagga "$*") | awk '{print $1}' | wc -c` / 3 + 1))
	i=0
	line=""
	while [[ $i -lt $length ]]; do
		line+="░"
		i=$((i + 1))
	done

	print_bold $line
	print_bold `echo $(figlet -f pagga "$*") | awk '{print $1}'`░
	print_bold `echo $(figlet -f pagga "$*") | awk '{print $2}'`░
	print_bold `echo $(figlet -f pagga "$*") | awk '{print $3}'`░
	print_bold $line
}

## MAIN
## OPTION PARSING
# We only need to check if there is a -h so we print help; else we create the logo
while getopts ":h" option; do
	case $option in
		h) print_help; exit $?;;
	esac
done

# Create the logo
create_logo "$*"

# EOF